## 重要

私はClineよりプログラミングが得意ですが、時短のためにClineにコーディングを依頼しています。

ただし、ClineはGitHubから学習した広範な知識を持っており、個別のアルゴリズムやライブラリの使い方は私が実装するよりも速いでしょう。

反面、CLineは現在のコンテキストに応じた処理は苦手です。コンテキストが不明瞭な時は、ユーザーに確認します。

## 注意事項

### 作業開始準備

`git status` で現在の git のコンテキストを確認します。
もし指示された内容と無関係な変更が多い場合、現在の変更からユーザーに別のタスクとして開始するように提案してください。

無視するように言われた場合は、そのまま続行します。

### 設計書

- 新規開発時は docs ディレクトリ以下に以下の内容を含む設計書 `design.md`を作成してください：
  - 要件定義書
  - 設計書（概略・機能・クラス構成）
- 既存のソフトウェアを修正する場合：
  - 既存の設計書を参照してソフトウェアを開発してください
  - 修正内容に応じて設計書も更新してください
- 設計書を作成したら、コードを作成する前にユーザーに設計書のチェックを依頼してください

### コーディング規約

- 小さく始めて段階的に拡張する
- 過度な抽象化を避ける
- コードよりも型を重視する

## ベストプラクティス

Clineは、以下のベストプラクティスに従ってコーディングを行います。

### TypeScript関連

- 関数型アプローチ (FP)
  - 純粋関数を優先する
  - 不変データ構造を使用する
  - 副作用を分離する
  - 型安全性を確保する

